import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,e as s}from"./app-D55Cmw5b.js";const t={},c=s(`<h2 id="机器环境" tabindex="-1"><a class="header-anchor" href="#机器环境"><span>机器环境</span></a></h2><blockquote><p>本实践将在 Ubuntu 22.04.3LTS 系统上进行安装测试<br> docker 版本<code>Docker Engine - Community 24.0.6</code> ，原则上docker版本无影响</p></blockquote><h2 id="清理docker容器" tabindex="-1"><a class="header-anchor" href="#清理docker容器"><span>清理docker容器</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 列出所有处于停止状态的容器</span>
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-q</span>

<span class="token comment"># 停止所有容器</span>
<span class="token function">docker</span> stop <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span>


<span class="token comment"># 删除所有停止状态的容器</span>
<span class="token function">docker</span> container prune

<span class="token comment"># 列出所有未被使用的镜像</span>
<span class="token function">docker</span> images <span class="token parameter variable">-q</span> <span class="token parameter variable">--filter</span> <span class="token string">&quot;dangling=true&quot;</span>

<span class="token comment"># 删除所有未被使用的镜像</span>
<span class="token function">docker</span> image prune

<span class="token comment"># 删除所有未被使用的卷</span>
<span class="token function">docker</span> volume prune

<span class="token comment"># 清理Docker缓存</span>
<span class="token function">docker</span> builder prune


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清理系统日志" tabindex="-1"><a class="header-anchor" href="#清理系统日志"><span>清理系统日志</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 清理日志</span>
<span class="token function">sudo</span> journalctl <span class="token parameter variable">--rotate</span>

<span class="token comment"># 清理日志(保留7天)</span>
<span class="token function">sudo</span> journalctl --vacuum-time<span class="token operator">=</span>7d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[c];function i(r,l){return e(),a("div",null,o)}const m=n(t,[["render",i],["__file","f9b885.html.vue"]]),k=JSON.parse(`{"path":"/p2024/Docker/f9b885.html","title":"清理docker容器","lang":"zh-CN","frontmatter":{"permalink":"/p2024/Docker/f9b885.html","lang":"zh-CN","title":"清理docker容器","description":"清理docker容器","isOriginal":true,"date":"2024-03-29T00:00:00.000Z","category":["docker"],"tag":["docker"],"head":[["meta",{"name":"keywords","content":"清理docker容器,docker"}],["meta",{"property":"og:url","content":"https://nstudy.org/p2024/Docker/f9b885.html"}],["meta",{"property":"og:site_name","content":"Jack's 新学习基地"}],["meta",{"property":"og:title","content":"清理docker容器"}],["meta",{"property":"og:description","content":"清理docker容器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-07T09:07:52.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2024-03-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-07T09:07:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"清理docker容器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-07T09:07:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\",\\"url\\":\\"https://nstudy.org\\"}]}"]],"star":true,"sticky":true},"headers":[{"level":2,"title":"机器环境","slug":"机器环境","link":"#机器环境","children":[]},{"level":2,"title":"清理docker容器","slug":"清理docker容器","link":"#清理docker容器","children":[]},{"level":2,"title":"清理系统日志","slug":"清理系统日志","link":"#清理系统日志","children":[]}],"git":{"createdTime":1712480872000,"updatedTime":1712480872000,"contributors":[{"name":"lizhiquan","email":"lizhiquan@jianke.com","commits":1}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"02.Docker/20240329_清理docker容器.md","localizedDate":"2024年3月29日","excerpt":"<h2>机器环境</h2>\\n<blockquote>\\n<p>本实践将在 Ubuntu 22.04.3LTS 系统上进行安装测试<br>\\ndocker 版本<code>Docker Engine - Community 24.0.6</code> ，原则上docker版本无影响</p>\\n</blockquote>\\n<h2>清理docker容器</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 列出所有处于停止状态的容器</span>\\n<span class=\\"token function\\">docker</span> <span class=\\"token function\\">ps</span> <span class=\\"token parameter variable\\">-a</span> <span class=\\"token parameter variable\\">-q</span>\\n\\n<span class=\\"token comment\\"># 停止所有容器</span>\\n<span class=\\"token function\\">docker</span> stop <span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">docker</span> <span class=\\"token function\\">ps</span> <span class=\\"token parameter variable\\">-q</span><span class=\\"token variable\\">)</span></span>\\n\\n\\n<span class=\\"token comment\\"># 删除所有停止状态的容器</span>\\n<span class=\\"token function\\">docker</span> container prune\\n\\n<span class=\\"token comment\\"># 列出所有未被使用的镜像</span>\\n<span class=\\"token function\\">docker</span> images <span class=\\"token parameter variable\\">-q</span> <span class=\\"token parameter variable\\">--filter</span> <span class=\\"token string\\">\\"dangling=true\\"</span>\\n\\n<span class=\\"token comment\\"># 删除所有未被使用的镜像</span>\\n<span class=\\"token function\\">docker</span> image prune\\n\\n<span class=\\"token comment\\"># 删除所有未被使用的卷</span>\\n<span class=\\"token function\\">docker</span> volume prune\\n\\n<span class=\\"token comment\\"># 清理Docker缓存</span>\\n<span class=\\"token function\\">docker</span> builder prune\\n\\n\\n</code></pre></div>"}`);export{m as comp,k as data};
