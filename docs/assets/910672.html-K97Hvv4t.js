import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-D9W4Cu8K.js";const e={},p=t(`<h2 id="背景介绍" tabindex="-1"><a class="header-anchor" href="#背景介绍"><span>背景介绍</span></a></h2><blockquote><p>有一个外部系统需要以API方式调用，但是调用的时候报SSL错误，需要处理SSL问题。</p></blockquote><h2 id="方案1-导入证书到jre证书库" tabindex="-1"><a class="header-anchor" href="#方案1-导入证书到jre证书库"><span>方案1 - 导入证书到jre证书库</span></a></h2><h3 id="操作步骤" tabindex="-1"><a class="header-anchor" href="#操作步骤"><span>操作步骤</span></a></h3><blockquote><p>&lt;domain_name&gt; 是域名地址</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载证书</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token operator">|</span> openssl s_client <span class="token parameter variable">-connect</span> <span class="token operator">&lt;</span>domain_name<span class="token operator">&gt;</span>:443 <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-ne</span> <span class="token string">&#39;/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p&#39;</span> <span class="token operator">&gt;</span> <span class="token operator">&lt;</span>domain_name<span class="token operator">&gt;</span>.crt

<span class="token comment"># 导入证书</span>
keytool <span class="token parameter variable">-import</span> <span class="token parameter variable">-noprompt</span> <span class="token parameter variable">-keystore</span> %JAVA_HOME%/jre/lib/security/cacerts <span class="token parameter variable">-storepass</span> changeit <span class="token parameter variable">-alias</span> xxxxcert <span class="token parameter variable">-file</span> <span class="token operator">&lt;</span>domain_name<span class="token operator">&gt;</span>.crt

<span class="token comment"># 验证证书是否导入成功</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-keystore</span> %JAVA_HOME%/jre/lib/security/cacerts <span class="token parameter variable">-storepass</span> changeit

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方案2-代码兼容-对ssl证书进行忽略" tabindex="-1"><a class="header-anchor" href="#方案2-代码兼容-对ssl证书进行忽略"><span>方案2- 代码兼容,对SSL证书进行忽略</span></a></h2><blockquote><p>当使用HttpClient时，你可以通过自定义SSL上下文来解决PKIX路径构建失败的问题。下面核心代码演示:</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">HttpClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>methods<span class="token punctuation">.</span></span><span class="token class-name">HttpGet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">NoopHostnameVerifier</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">TrustAllStrategy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">HttpClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span></span><span class="token class-name">SSLContextBuilder</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpClientWithCustomSSLContext</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// Create a custom SSL context that trusts all certificates</span>
        <span class="token class-name">SSLContextBuilder</span> sslContextBuilder <span class="token operator">=</span> <span class="token class-name">SSLContextBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sslContextBuilder<span class="token punctuation">.</span><span class="token function">loadTrustMaterial</span><span class="token punctuation">(</span><span class="token class-name">TrustAllStrategy</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Disable hostname verification</span>
        <span class="token class-name">HttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSSLContext</span><span class="token punctuation">(</span>sslContextBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSSLHostnameVerifier</span><span class="token punctuation">(</span><span class="token class-name">NoopHostnameVerifier</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Make a request with the custom HttpClient</span>
        <span class="token class-name">HttpGet</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpGet</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Process response as needed</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>某SDK已经封装了HttpClient，修改代码如下 其中 <code>.setConnectionManager(connectionManager)</code> 影响SSL的验证 , 解决了<code>PKIX path building failed错误</code></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Registry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConnectionSocketFactory</span><span class="token punctuation">&gt;</span></span> socketFactoryRegistry <span class="token operator">=</span> <span class="token class-name">RegistryBuilder</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConnectionSocketFactory</span><span class="token punctuation">&gt;</span></span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PlainConnectionSocketFactory</span><span class="token punctuation">.</span><span class="token function">getSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&quot;https&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>
                            <span class="token class-name">SSLContextBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadTrustMaterial</span><span class="token punctuation">(</span><span class="token class-name">TrustAllStrategy</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            <span class="token class-name">NoopHostnameVerifier</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PoolingHttpClientConnectionManager</span> connectionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span>socketFactoryRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> maxCon <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getMaxConnections</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> maxConPerRoute <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getMaxConPerRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            connectionManager<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span>maxCon<span class="token punctuation">)</span><span class="token punctuation">;</span>
            connectionManager<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span>maxConPerRoute<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">ConnectionKeepAliveStrategy</span> strategy<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>connectionKeepAliveStrategy <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                strategy <span class="token operator">=</span> connectionKeepAliveStrategy<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                strategy <span class="token operator">=</span> <span class="token function">getConnectionKeepAliveStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">HttpClient</span> httpClient<span class="token punctuation">;</span>
            httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>connectionManager<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setKeepAliveStrategy</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setRetryHandler</span><span class="token punctuation">(</span>httpRequestRetryHandler<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setDefaultRequestConfig</span><span class="token punctuation">(</span><span class="token class-name">RequestConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStaleConnectionCheckEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>上述代码原来的代码为:<br> 该代码存在<code>PKIX path building failed错误</code></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>            <span class="token class-name">PoolingHttpClientConnectionManager</span> connectionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> maxCon <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getMaxConnections</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> maxConPerRoute <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getMaxConPerRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            connectionManager<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span>maxCon<span class="token punctuation">)</span><span class="token punctuation">;</span>
            connectionManager<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span>maxConPerRoute<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">ConnectionKeepAliveStrategy</span> strategy<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>connectionKeepAliveStrategy <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                strategy <span class="token operator">=</span> connectionKeepAliveStrategy<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                strategy <span class="token operator">=</span> <span class="token function">getConnectionKeepAliveStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">HttpClient</span> httpClient<span class="token punctuation">;</span>
            httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>connectionManager<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setKeepAliveStrategy</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setRetryHandler</span><span class="token punctuation">(</span>httpRequestRetryHandler<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setDefaultRequestConfig</span><span class="token punctuation">(</span><span class="token class-name">RequestConfig</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStaleConnectionCheckEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","910672.html.vue"]]),d=JSON.parse(`{"path":"/p2024/Java/910672.html","title":"JDK对SSL报错的处理方案","lang":"zh-CN","frontmatter":{"permalink":"/p2024/Java/910672.html","lang":"zh-CN","title":"JDK对SSL报错的处理方案","description":"JDK对SSL报错的处理方案","isOriginal":true,"date":"2024-03-27T00:00:00.000Z","category":["JDK","keytool","SSL"],"tag":["JDK","keytool","SSL"],"head":[["meta",{"name":"keywords","content":"keytool,JDK对SSL报错的处理方案"}],["meta",{"property":"og:url","content":"https://hub.nstudy.org/p2024/Java/910672.html"}],["meta",{"property":"og:site_name","content":"Jack's 新学习基地"}],["meta",{"property":"og:title","content":"JDK对SSL报错的处理方案"}],["meta",{"property":"og:description","content":"JDK对SSL报错的处理方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-19T08:21:32.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"JDK"}],["meta",{"property":"article:tag","content":"keytool"}],["meta",{"property":"article:tag","content":"SSL"}],["meta",{"property":"article:published_time","content":"2024-03-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-19T08:21:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JDK对SSL报错的处理方案\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-19T08:21:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\",\\"url\\":\\"https://hub.nstudy.org\\"}]}"]],"star":true,"sticky":true},"headers":[{"level":2,"title":"背景介绍","slug":"背景介绍","link":"#背景介绍","children":[]},{"level":2,"title":"方案1 - 导入证书到jre证书库","slug":"方案1-导入证书到jre证书库","link":"#方案1-导入证书到jre证书库","children":[{"level":3,"title":"操作步骤","slug":"操作步骤","link":"#操作步骤","children":[]}]},{"level":2,"title":"方案2- 代码兼容,对SSL证书进行忽略","slug":"方案2-代码兼容-对ssl证书进行忽略","link":"#方案2-代码兼容-对ssl证书进行忽略","children":[]}],"git":{"createdTime":1713514892000,"updatedTime":1713514892000,"contributors":[{"name":"lizhiquan","email":"lizhiquan@jianke.com","commits":1}]},"readingTime":{"minutes":1.55,"words":465},"filePathRelative":"03.Java/20240327_JDK对SSL报错的处理方案.md","localizedDate":"2024年3月27日","excerpt":"<h2>背景介绍</h2>\\n<blockquote>\\n<p>有一个外部系统需要以API方式调用，但是调用的时候报SSL错误，需要处理SSL问题。</p>\\n</blockquote>\\n<h2>方案1 - 导入证书到jre证书库</h2>\\n<h3>操作步骤</h3>\\n<blockquote>\\n<p>&lt;domain_name&gt; 是域名地址</p>\\n</blockquote>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 下载证书</span>\\n<span class=\\"token builtin class-name\\">echo</span> <span class=\\"token parameter variable\\">-n</span> <span class=\\"token operator\\">|</span> openssl s_client <span class=\\"token parameter variable\\">-connect</span> <span class=\\"token operator\\">&lt;</span>domain_name<span class=\\"token operator\\">&gt;</span>:443 <span class=\\"token operator\\">|</span> <span class=\\"token function\\">sed</span> <span class=\\"token parameter variable\\">-ne</span> <span class=\\"token string\\">'/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">&lt;</span>domain_name<span class=\\"token operator\\">&gt;</span>.crt\\n\\n<span class=\\"token comment\\"># 导入证书</span>\\nkeytool <span class=\\"token parameter variable\\">-import</span> <span class=\\"token parameter variable\\">-noprompt</span> <span class=\\"token parameter variable\\">-keystore</span> %JAVA_HOME%/jre/lib/security/cacerts <span class=\\"token parameter variable\\">-storepass</span> changeit <span class=\\"token parameter variable\\">-alias</span> xxxxcert <span class=\\"token parameter variable\\">-file</span> <span class=\\"token operator\\">&lt;</span>domain_name<span class=\\"token operator\\">&gt;</span>.crt\\n\\n<span class=\\"token comment\\"># 验证证书是否导入成功</span>\\nkeytool <span class=\\"token parameter variable\\">-list</span> <span class=\\"token parameter variable\\">-keystore</span> %JAVA_HOME%/jre/lib/security/cacerts <span class=\\"token parameter variable\\">-storepass</span> changeit\\n\\n</code></pre></div>"}`);export{k as comp,d as data};
