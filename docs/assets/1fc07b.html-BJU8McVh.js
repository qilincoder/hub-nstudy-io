import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-BnHKSE1F.js";const p={},e=t(`<h2 id="实现目标" tabindex="-1"><a class="header-anchor" href="#实现目标"><span>实现目标</span></a></h2><blockquote><p>linux中tree命令可以查看目录树，但是有时候我们并不不能使用这个命令。有可能你没有安装或者你无法进入bash命令行</p></blockquote><h2 id="依赖条件" tabindex="-1"><a class="header-anchor" href="#依赖条件"><span>依赖条件</span></a></h2><blockquote><p>已经安装好python3.11 ，原则上其他版本也可以</p></blockquote><h2 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码"><span>实现代码</span></a></h2><blockquote><p>主代码</p></blockquote><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token comment"># __ author:Jack</span>
<span class="token comment"># date: 2024-04-01</span>

<span class="token keyword">import</span> os

PREFIX <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;└─ &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;├─ &#39;</span><span class="token punctuation">]</span>
INDENTION <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;│  &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">]</span>

<span class="token comment"># path : 文件夹全路径</span>
<span class="token comment"># flag : 是否为最后一个文件(夹),为true 代表最后一个文件(夹),初始值None未被使用</span>
<span class="token comment"># relation : 每层文件夹的flag属性</span>
<span class="token keyword">def</span> <span class="token function">tree</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> flag<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> relation<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#files = os.listdir(path)</span>
    files <span class="token operator">=</span> <span class="token punctuation">[</span>f <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token keyword">not</span> f<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    files<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
   
    <span class="token keyword">yield</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;&#39;</span> <span class="token keyword">if</span> flag <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">else</span> PREFIX<span class="token punctuation">[</span><span class="token keyword">not</span> flag<span class="token punctuation">]</span><span class="token punctuation">,</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token keyword">if</span> flag <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        relation<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> files<span class="token punctuation">:</span>
        <span class="token keyword">if</span> i<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> i<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;__&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>        
        <span class="token keyword">for</span> j <span class="token keyword">in</span> relation<span class="token punctuation">:</span>
            <span class="token keyword">yield</span> INDENTION<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        tempPath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>i<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">yield</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>PREFIX<span class="token punctuation">[</span>i<span class="token operator">!=</span>files<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> tree<span class="token punctuation">(</span>tempPath<span class="token punctuation">,</span>i<span class="token operator">==</span>files<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>relation<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                 <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
                   
       
HOME_DIR<span class="token operator">=</span><span class="token string">&quot;/home/app&quot;</span>
<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> tree<span class="token punctuation">(</span>HOME_DIR<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>输出样例</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>app
├─ test.ipynb
├─ source
│  └─ info.json
├─ requirements.txt
├─ models
│  └─ info.json
├─ datasets
│  ├─ D202211002
│  │  ├─ target
│  │  │  ├─ test.xlsx
│  │  │  └─ 17Mxx.zip
│  │  └─ src
│  │      ├─ test.xlsx
│  │      └─ test-1.jpg
│  └─ D202211001
│      ├─ tag
│      │  └─ test-1.jpg
│      └─ original
│          ├─ xx1.png
│          ├─ roi.jpg
│          ├─ readme
│          ├─ 2.jpg
│          └─ 1.89.gif
└─ README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","1fc07b.html.vue"]]),d=JSON.parse(`{"path":"/p2024/Python/1fc07b.html","title":"python实现Tree命令输出","lang":"zh-CN","frontmatter":{"permalink":"/p2024/Python/1fc07b.html","lang":"zh-CN","title":"python实现Tree命令输出","description":"python实现Tree命令输出","isOriginal":true,"date":"2024-04-02T00:00:00.000Z","category":["python","Tree"],"tag":["python","Tree"],"head":[["meta",{"name":"keywords","content":"python实现Tree命令输出, python,Tree"}],["meta",{"property":"og:url","content":"https://hub.nstudy.org/p2024/Python/1fc07b.html"}],["meta",{"property":"og:site_name","content":"Jack's 新学习基地"}],["meta",{"property":"og:title","content":"python实现Tree命令输出"}],["meta",{"property":"og:description","content":"python实现Tree命令输出"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-09T03:43:15.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"Tree"}],["meta",{"property":"article:published_time","content":"2024-04-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-09T03:43:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"python实现Tree命令输出\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-09T03:43:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\",\\"url\\":\\"https://hub.nstudy.org\\"}]}"]],"star":true,"sticky":true},"headers":[{"level":2,"title":"实现目标","slug":"实现目标","link":"#实现目标","children":[]},{"level":2,"title":"依赖条件","slug":"依赖条件","link":"#依赖条件","children":[]},{"level":2,"title":"实现代码","slug":"实现代码","link":"#实现代码","children":[]}],"git":{"createdTime":1712634195000,"updatedTime":1712634195000,"contributors":[{"name":"lizhiquan","email":"lizhiquan@jianke.com","commits":1}]},"readingTime":{"minutes":1.1,"words":329},"filePathRelative":"05.Python/20240402_python实现Tree命令输出.md","localizedDate":"2024年4月2日","excerpt":"<h2>实现目标</h2>\\n<blockquote>\\n<p>linux中tree命令可以查看目录树，但是有时候我们并不不能使用这个命令。有可能你没有安装或者你无法进入bash命令行</p>\\n</blockquote>\\n<h2>依赖条件</h2>\\n<blockquote>\\n<p>已经安装好python3.11 ，原则上其他版本也可以</p>\\n</blockquote>\\n<h2>实现代码</h2>\\n<blockquote>\\n<p>主代码</p>\\n</blockquote>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># -*- coding: utf-8 -*-</span>\\n\\n<span class=\\"token comment\\"># __ author:Jack</span>\\n<span class=\\"token comment\\"># date: 2024-04-01</span>\\n\\n<span class=\\"token keyword\\">import</span> os\\n\\nPREFIX <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'└─ '</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'├─ '</span><span class=\\"token punctuation\\">]</span>\\nINDENTION <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'│  '</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">' '</span><span class=\\"token operator\\">*</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token comment\\"># path : 文件夹全路径</span>\\n<span class=\\"token comment\\"># flag : 是否为最后一个文件(夹),为true 代表最后一个文件(夹),初始值None未被使用</span>\\n<span class=\\"token comment\\"># relation : 每层文件夹的flag属性</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">tree</span><span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">,</span> flag<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span> relation<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\">#files = os.listdir(path)</span>\\n    files <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>f <span class=\\"token keyword\\">for</span> f <span class=\\"token keyword\\">in</span> os<span class=\\"token punctuation\\">.</span>listdir<span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> f<span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\".\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n    files<span class=\\"token punctuation\\">.</span>sort<span class=\\"token punctuation\\">(</span>reverse<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">)</span>\\n   \\n    <span class=\\"token keyword\\">yield</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">''</span> <span class=\\"token keyword\\">if</span> flag <span class=\\"token keyword\\">is</span> <span class=\\"token boolean\\">None</span> <span class=\\"token keyword\\">else</span> PREFIX<span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">not</span> flag<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>basename<span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'\\\\n'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n    \\n    <span class=\\"token keyword\\">if</span> flag <span class=\\"token keyword\\">is</span> <span class=\\"token keyword\\">not</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">:</span>\\n        relation<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>flag<span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> files<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> i<span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\".\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span> i<span class=\\"token punctuation\\">.</span>startswith<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"__\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">continue</span>        \\n        <span class=\\"token keyword\\">for</span> j <span class=\\"token keyword\\">in</span> relation<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">yield</span> INDENTION<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span>\\n        tempPath <span class=\\"token operator\\">=</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">,</span>i<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> os<span class=\\"token punctuation\\">.</span>path<span class=\\"token punctuation\\">.</span>isdir<span class=\\"token punctuation\\">(</span>tempPath<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">yield</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">.</span>join<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>PREFIX<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">!=</span>files<span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'\\\\n'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> tree<span class=\\"token punctuation\\">(</span>tempPath<span class=\\"token punctuation\\">,</span>i<span class=\\"token operator\\">==</span>files<span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>relation<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                 <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span>end<span class=\\"token operator\\">=</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n                   \\n       \\nHOME_DIR<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"/home/app\\"</span>\\n<span class=\\"token keyword\\">if</span> __name__<span class=\\"token operator\\">==</span><span class=\\"token string\\">'__main__'</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> tree<span class=\\"token punctuation\\">(</span>HOME_DIR<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span>end<span class=\\"token operator\\">=</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}`);export{r as comp,d as data};
